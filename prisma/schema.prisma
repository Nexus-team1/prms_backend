// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  PROJECT_MANAGER
  DEVELOPER
  DESIGNER
  USER
}

enum ProjectStatus {
  ACTIVE
  COMPLETED
  ARCHIVED
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  DONE
}

model Project {
  id          Int           @id @default(autoincrement())
  name        String
  description String?
  status      ProjectStatus @default(ACTIVE)
  tasks       Task[]
  sprints     Sprint[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Sprint {
  id        Int      @id @default(autoincrement())
  name      String
  startDate DateTime
  endDate   DateTime
  project   Project  @relation(fields: [projectId], references: [id])
  projectId Int
  tasks     Task[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  email     String    @unique
  password  String
  fullName  String?
  role      Role      @default(USER)
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  otp       String? // for password reset
  otpExpiry DateTime? // for password reset
  tasks     Task[]    @relation("AssignedTasks")
}

model Task {
  id            Int        @id @default(autoincrement())
  title         String
  description   String?
  status        TaskStatus @default(PENDING)
  dueDate       DateTime?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  project       Project    @relation(fields: [projectId], references: [id])
  projectId     Int
  sprint        Sprint?    @relation(fields: [sprintId], references: [id])
  sprintId      Int?
  assignedTo    User?      @relation("AssignedTasks", fields: [assignedToId], references: [id])
  assignedToId  Int?
  preferredRole String? // "DEVELOPER" or "DESIGNER"
}
